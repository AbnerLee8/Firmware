/* app_dsp.h */
#ifndef _APP_DSP_H
#define _APP_DSP_H

#include "app.h"


// Register space addresses
#define LARK_FDSP_PROGRAM_MEM_BASE   (0x40008000)            /*!< start address of fdsp code  memory 0~63 */
#define LARK_FDSP_PARAM_MEM_BASE     (0x40008100)            /*!< start adddres of fdsp param memory 0~63 */
#define LARK_FDSP_PARAM_SPAN         (0x00000100)
#define LARK_FDSP_PARAM_BANKA_BASE   (0x40008100)            /*!< start adddres of fdsp param bank a 0~63 */
#define LARK_FDSP_PARAM_BANKB_BASE   (0x40008600)            /*!< start adddres of fdsp param bank b 0~63 */
#define LARK_FDSP_PARAM_BANKC_BASE   (0x40008B00)            /*!< start adddres of fdsp param bank c 0~63 */
#define LARK_FDSP_STATE_MEM_BASE     (0x40009000)            /*!< start address of fdsp state memory */
#define LARK_EQ_PROGRAM_MEM_BASE     (0x4000A000)            /*!< start address of eq program memory */
#define LARK_EQ_PARAM_MEM_BASE       (0x4000A200)            /*!< start address of eq param   memory */
#define LARK_EQ_PARAM0_MEM_BASE      (0x4000A200)            /*!< start address of eq param0  memory */
#define LARK_EQ_PARAM1_MEM_BASE      (0x4000A400)            /*!< start address of eq param1  memory */
#define LARK_FDSP_PROGRAM_T_MEM_BASE (0x4000A800)            /*!< start address of fdsp code  memory 64~95 */
#define LARK_FDSP_PARAM_T_MEM_BASE   (0x4000A900)            /*!< start adddres of fdsp param memory 64~95 */
#define LARK_FDSP_PARAM_T_BANKA_BASE (0x4000A900)            /*!< start adddres of fdsp param bank a 64~95 */
#define LARK_FDSP_PARAM_T_BANKB_BASE (0x4000AE00)            /*!< start adddres of fdsp param bank b 64~95 */
#define LARK_FDSP_PARAM_T_BANKC_BASE (0x4000B300)            /*!< start adddres of fdsp param bank c 64~95 */
#define LARK_FDSP_STATE_T_MEM_BASE   (0x4000B800)            /*!< start address of fdsp state memory 64~95 */
#define LARK_8BIT_REG_ADDR_START     (0x4000C000)            /*!< start address of 8-bit reg space   */
#define LARK_8BIT_REG_ADDR_END       (0x4000CFFF)            /*!< end   address of 8-bit reg space   */
#define LARK_ADP2SOC_BUF_START_ADDR  (0x40040000)            /*!< start address of adp2soc data buf  */
#define LARK_ADP2SOC_BUF_BYTE_LEN    (0x00000140)
#define LARK_SOC2ADP_BUF_START_ADDR  (0x40040200)            /*!< start address of soc2adp data buf  */
#define LARK_SOC2ADP_BUF_BYTE_LEN    (0x00000040)
#define LARK_ROM_START_ADDR          (0x50000000)            /*!< start address of rom space         */
#define LARK_TDSP_DRAM0_START_ADDR   (0x5FFF0000)            /*!< start address of l1 dram0          */
#define LARK_TDSP_DRAM1_START_ADDR   (0x5FFF4000)            /*!< start address of l1 dram1          */
#define LARK_TDSP_IRAM0_START_ADDR   (0x5FFF8000)            /*!< start address of l1 iram0          */
#define LARK_SYSRAM_START_ADDR       (0x60000000)            /*!< start address of system sram space */
#define LARK_FIFOSRAM_START_ADDR     (0x60010000)            /*!< start address of fifo   sram space */
#define LARK_FIFOSRAM0_START_ADDR    (0x60010000)            /*!< start address of fifo0  sram space */
#define LARK_FIFOSRAM1_START_ADDR    (0x60020000)            /*!< start address of fifo1  sram space */
#define LARK_FIFOSRAM2_START_ADDR    (0x60030000)            /*!< start address of fifo2  sram space */
#define LARK_QSPIFLASH_START_ADDR    (0x68000000)            /*!< start address of qspi  flash space */
#define LARK_DS_TIE_SRC_BASE_ADDR    (0x00)                  /*!< start address of tie source        */
#define LARK_DS_TIE_DST_BASE_ADDR    (0x80)                  /*!< start address of tie destination   */
#define LARK_LKUPMEMLD(chnl)         LKUPMEMLD(LARK_DS_TIE_SRC_BASE_ADDR + chnl)       /*! chnl: @see adi_lark_ds_rdy2dma_chnl_e */
#define LARK_LKUPMEMST(chnl, data)   LKUPMEMST(LARK_DS_TIE_DST_BASE_ADDR + chnl, data) /*! chnl: 0 ~ 15 for TDSP output 0 ~ 15 */

// .............................................................................
// @brief  enum for FastDSP parameter bank
// .............................................................................

// These are component IDs / matrix column entries from the parmater bank 
// matrices generated by the Lark Studio sofwtare application

#define R_TALK_MIC      16
#define L_TALK_MIC      18
#define BOOM_MIC        36
#define DMIC0_MUTE      0
#define DMIC1_MUTE      1
#define DMIC2_MUTE      2
#define DMIC3_MUTE      3
#define DMIC4_MUTE      4
#define DMIC5_MUTE      5


#define BF_FDSP_EN_INFO                          0x4000C008, 0x00000100
#define BF_FDSP_RUN_INFO                         0x4000C0B0, 0x00000100
#define BF_FDSP_BANK_SEL_INFO                    0x4000C0B1, 0x00000200

typedef enum{
    API_LARK_FDSP_PARAM_BANK_A = 0,
    API_LARK_FDSP_PARAM_BANK_B = 1,
    API_LARK_FDSP_PARAM_BANK_C = 2
} adi_lark_fdsp_param_bank_e;

// DOM-IGNORE-BEGIN
#ifdef __cplusplus  // Provide C++ Compatibility
extern "C" {
#endif
// DOM-IGNORE-END

void APP_DSP_Initialize ( void );
void APP_DSP_Tasks( void );
void dsp_setup( void );

//DOM-IGNORE-BEGIN
#ifdef __cplusplus
}
#endif
//DOM-IGNORE-END

#endif /* _APP_DSP_H */
